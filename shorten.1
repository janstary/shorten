.Dd February 28, 2023
.Dt SHORTEN 1
.Os
.Sh NAME
.Nm shorten
.Nd fast compression of waveform files
.Sh SYNOPSIS
.Nm
.Op Fl a Ar num
.Op Fl b Ar num
.Op Fl c Ar num
.Op Fl d Ar num
.Op Fl m Ar num
.Op Fl n Ar num
.Op Fl p Ar num
.Op Fl q Ar num
.Op Fl r Ar num
.Op Fl t Ar type
.Op Fl u
.Op Fl v Ar num
.Op Ar file.wav
.Op Ar file.shn
.Nm
.Fl x
.Op Fl a Ar num
.Op Fl d Ar num
.Op Ar file.shn
.Op Ar file.wav
.Sh DESCRIPTION
.Nm
reduces the size of waveform files (such as audio signals)
using Huffman coding of LPC prediction residuals
and optional additional quantisation.
In lossless mode the amount of compression
depends on the nature of the waveform.
Those consisting of low frequencies and low amplitudes
give the best compression, which may be 2:1 or better.
Lossy compression zeroes the lower order bits of the waveform,
retaining the waveform shape, and maintains a minimal acceptable
segmental signal to noise ratio
.Po Fl n Pc
or a maximal bit rate
.Po Fl r Pc .
.Pp
If two file names are specified then these are used
as the input and output file.
The input file name can be
.Sq -
to read from standard input and
the output file name can be
.Sq -
to write to standard output.
If only one file name is specified,
then that name is used for input
and the output file is named by adding the suffix
.Sq shn
on compression and removing the
.Sq shn
suffix on decompression.
In these cases the input file is removed on completion.
If no file names are specified,
.Nm
reads from standard input and writes to standard output.
Whenever possible, the output file inherits the permissions,
owner, group, access and modification times of the input file.
.Pp
The RIFF WAVE (Microsoft .wav) file type is the default.
These files contain enough information to set most of the switches below,
so effective operation is obtained just by setting
the desired level of compression (with the
.Fl n
or
.Fl r
switch) .
.Pp
The options are as follows:
.Bl -tag -width sizexxx
.It Fl a Ar num
The number of bytes to be copied verbatim before compression begins.
This option can be used to preserve fixed length ASCII headers.
.It Fl b Ar num
The number of samples to be grouped into a block for processing.
Within a block the signal elements are expected
to have the same spectral characteristics.
The default value of 256 works well for a large range of audio files.
.It Fl c Ar num
The number of channels.
The channels are assumed to be interlaced,
as in a(0), b(0), a(1), b(1) for two channels,
and independent of each other.
.It Fl d Ar num
The number of bytes to be discarded before compression or decompression.
This may be used to strip a header from a file.
.It Fl m Ar num
The number of past blocks to be used in estimating
the mean and power of the signal.
The value of zero disables this prediction
and the mean is assumed to lie in the middle of the range
of the data type (i.e. at zero for signed integers).
.It Fl n Ar num
The minimum acceptable segmental signal to noise ratio in dB
to be maintained in lossy compression.
The signal power is taken as the variance
of the samples in the current block.
The noise power is the quantisation noise
incurred by coding the current block
assuming that samples are uniformly distributed
over the quantisation interval.
The bit rate is dynamically changed
to maintain the desired signal to noise ratio.
The dafault is lossless encoding.
.It Fl p Ar num
The maximum order of the linear predictive filter.
The default value of zero disables the use of linear prediction
and a polynomial interpolation method is used instead.
The use of the linear predictive filter generally results
in a small improvement in compression ratio
at the expense of execution time.
Decompression time is normally about twice that
of the default polynomial interpolation.
For version 0 and 1, compression time is linear
in the specified maximum order as all lower values
are searched for the greatest expected compression
(the number of bits required to transmit the prediction residual
is monotonically decreasing with prediction order,
but transmitting each filter coefficient requires about 7 bits).
For version 2 and above, the search is started at zero order
and terminated when the last two prediction orders give
a larger expected bit rate than the minimum found to date.
This is a reasonable strategy for many real world signals.
You may revert back to the exhaustive algorithm by setting
.Fl v Dv 1
to check that this works for your signal type.
.It Fl q Ar num
The number of low order bits in each sample
which can be discarded (set to zero).
This is useful if these bits carry no information,
for example when the signal is corrupted by noise.
.It Fl r Ar num
The expected maximum number of bits per sample.
The upper bound on the bit rate is maintained
by setting the low order bits of the sample to zero,
hence maximising the segmental signal to noise ratio.
.It Fl t Ar type
The type of the sound file: one of aiff, wav, s8, u8,
s16, u16, s16x, u16x, s16hl, u16hl, s16lh, u16lh, ulaw, or alaw.
The initial
.Sq s
or
.Sq u
means signed or unsigned integers;
the 8 or 16 means the number of bits per sample.
No further extension means the data is in the natural byte order;
a trailing
.Sq x
specifies byte swapped data, while
.Sq hl
explicitly states the byte order as high byte followed by low byte and
.Sq lh
means the opposite.
For example,
.Sq s16
means signed 16 bit integers in the natural byte order.
.Pp
.Sq ulaw
is the natural file type of ulaw encoded files
(such as the default sun .au files)
and alaw is a similar byte-packed scheme.
Specific optimisations are applied to ulaw and alaw files.
If lossless compression is specified with ulaw files
then a check is made that the whole dynamic range is used.
Lossless coding of both file types uses an internal format
with a monotonic mapping to linear.
If lossy compression is specified
then the data is internally converted to linear.
The lossy option
.Fl r Dv 4
has been observed to give little degradation
and provides 2:1 compression.
.Pp
With the types listed above you should
explicitly set the number of channels (if not mono) with
.Fl c
and if the file contains a header the size should be specified with the
.Fl a
option.
This is most important for lossy compression which will lead
to data corruption if a file header is inadvertently lossy coded.
.Pp
Finally, the file type may be specified as
.Sq wav
(the default).
In this case the wav header is interogated for header length
and the specific data type and the number of channels to be used.
.It Fl u
The ulaw standard (ITU G711) has two codes
which both map onto the zero value on a linear scale.
The
.Fl u
flag maps the negative zero onto the positive zero
and yields a marginally better compression for format version 2
(the gain is significant for older format versions).
.It Fl v Ar num
The binary format version number of compressed files: 1 or 2.
Version 2 generally gives better compression.
When decoding, the version is detected automatically.
.It Fl x
Reconstruct the original file.
All other options except
.Fl a
and
.Fl d
are ignored.
.El
.Pp
.Nm
works by segmenting the signal into blocks,
making a model of each block in order to remove temporal redundancy,
then Huffman coding the quantised prediction residual.
Interleaved samples are read as separate channels,
which are assumed to be independent.
Four functions are computed for each block and each channel,
corresponding to the signal, difference signal,
second and third order differences.
The one with the lowest variance is coded.
The variance is measured by summing absolute values for speed
and to avoid overflow.
It is assumed that the signal has the Laplacian
probability density function of exp(-abs(x)).
There is a computationally efficient way
of mapping data so distributed to Huffman codes.
The code is in four parts:
a run of zeros; a bounding one;
a fixed number of bits mantissa;
and a sign bit.
The number of leading zeros gives the offset from zero.
Some examples for a 2 bit mantissa:
.Pp
.nf
Value  zeros  stopbit  mantissa  signbit  total code
 0            1        00        0        1000
 1            1        01        0        1010
 2            1        10        0        1010
 4     0      1        00        0        01000
 7     0      1        11        0        01110
 8     00     1        00        0        001000
-1            1        00        1        1001
-2            1        01        1        1011
-7     0      1        10        1        01101
.fi
.Pp
Negative numbers are offset by one
as there is no need to have two zero codes.
The technical report CUED/F-INFENG/TR.156
included with the shorten distribution
contains bugs in this format description.
.Sh AUTHORS
.An Tony Robinson
.An Jan Star√Ω
.Sh BUGS
No check is made that file size actually decreases;
valid waveform files generally achieve some compression.
Even compressing a file of random bytes (the worst case)
only results in a small increase in the file length
(about 6% for 8 bit data and 3% for 16 bit data).
There is one condition that is know to be problematic:
the lossy compression of unsigned data without mean estimation.
Large files may result if the mean is far from the middle range value.
For these files the value of the -m switch should be non-zero,
as it is by default in format version 2.
.Pp
All channels are expected to contain the same data type.
Normally, this is not a restriction, but it does mean that
if lossy coding is selected, then all channels use lossy coding.
.Pp
When building from source,
an easy way to check for regressions is to run
.Sq make test .
If that fails, please notify
.Aq Mt hans@stare.cz .
